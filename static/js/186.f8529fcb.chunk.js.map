{"version":3,"file":"static/js/186.f8529fcb.chunk.js","mappings":"gNAsCA,UAnCgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAqB,mCAAG,8GAEJC,EAAAA,EAAAA,IAAkBN,GAFd,OAEpBE,EAFoB,OAG1BC,EAAWD,GAHe,gDAK1BK,QAAQC,IAAI,gCAAZ,MAL0B,yDAAH,qDAS3BH,GACD,GAAE,CAACL,IAEmB,IAAnBE,EAAQO,QACH,wDAIP,4BACE,qCACA,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,qCAAaD,EAAOE,aAFbF,EAAOG,GADC,QAS1B,C,8LClCKC,EAAU,mCACVC,EAAW,+BAEJC,EAAS,mCAAG,WAAMjB,GAAN,kGAEEkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAhB,EADA,4BAC2Be,IAH7B,cAEfI,EAFe,OAKfC,EAAOD,EAASC,KALD,kBAMdA,EAAKC,MANS,uCAQrBd,QAAQC,IAAI,uBAAZ,MARqB,kBASd,IATc,yDAAH,sDAaTc,EAAW,mCAAG,+GAEAJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAHrB,cAEjBI,EAFiB,OAKjBC,EAAOD,EAASC,KALC,kBAMhBA,EAAKG,SANW,uCAQvBhB,QAAQC,IAAI,yBAAZ,MARuB,kBAShB,IATgB,yDAAH,qDAaXgB,EAAiB,mCAAG,WAAMxB,GAAN,kGAENkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAhB,EADA,oBACmBe,IAHb,cAEvBI,EAFuB,OAKvBC,EAAOD,EAASC,KALO,kBAMtBA,GANsB,uCAQ7Bb,QAAQC,IAAI,gCAAZ,MAR6B,kBAStB,MATsB,yDAAH,sDAajBiB,EAAuB,mCAAG,WAAMC,GAAN,2FAE7BC,EAF6B,UAEpBX,EAFoB,iCAEaD,EAFb,kBAE8Ba,mBAC/DF,IAHiC,SAKZR,EAAAA,EAAAA,IAAUS,GALE,cAK7BR,EAL6B,OAM7BC,EAAOD,EAASC,KANa,kBAO5BA,EAAKG,SAPuB,uCASnChB,QAAQC,IAAI,yBAAZ,MATmC,kBAU5B,IAV4B,yDAAH,sDAcvBF,EAAiB,mCAAG,WAAMN,GAAN,kGAENkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAhB,EADA,4BAC2Be,IAHrB,cAEvBI,EAFuB,OAKvBC,EAAOD,EAASC,KALO,kBAMtBA,EAAKG,SANiB,uCAQ7BhB,QAAQC,IAAI,gCAAZ,MAR6B,kBAStB,IATsB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/tmdbAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from 'services/tmdbAPI';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviewsData = async () => {\n      try {\n        const reviews = await fetchMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviewsData();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <div>There are no reviews yet.</div>;\n  }\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>Content: {review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '9c2047c90d98ec66c1e34a0e397d29c4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching cast:', error);\n    return [];\n  }\n};\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const fetchMoviesBySearchTerm = async searchTerm => {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n      searchTerm\n    )}`;\n    const response = await axios.get(url);\n    const data = response.data;\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n"],"names":["movieId","useState","reviews","setReviews","useEffect","fetchMovieReviewsData","fetchMovieReviews","console","log","length","map","review","author","content","id","API_KEY","BASE_URL","fetchCast","axios","response","data","cast","fetchMovies","results","fetchMovieDetails","fetchMoviesBySearchTerm","searchTerm","url","encodeURIComponent"],"sourceRoot":""}