{"version":3,"file":"static/js/653.b3054e68.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","services/tmdbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"Movies_nav__xgurm\",\"nav__name\":\"Movies_nav__name__X2Gn5\",\"nav__namehome\":\"Movies_nav__namehome__X9xkp\",\"search\":\"Movies_search__xz3P7\",\"input\":\"Movies_input__OE3ef\",\"button\":\"Movies_button__hVjwG\",\"li\":\"Movies_li__oWqWQ\"};","import { useCallback, useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport styles from './Movies.module.css';\nimport { fetchMoviesBySearchTerm } from 'services/tmdbAPI';\n\nconst Movies = () => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const searchTerm = searchParams.get('search');\n  const [movies, setMovies] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const navigate = useNavigate();\n\n  const fetchMoviesData = useCallback(async () => {\n    if (searchTerm) {\n      try {\n        const movies = await fetchMoviesBySearchTerm(searchTerm);\n        setMovies(movies);\n      } catch (error) {\n        console.log('Error fetching movies:', error);\n      }\n    }\n  }, [searchTerm]);\n\n  useEffect(() => {\n    fetchMoviesData();\n  }, [fetchMoviesData]);\n\n  const handleSearch = useCallback(\n    e => {\n      e.preventDefault();\n      navigate(`/movies?search=${encodeURIComponent(searchInput)}`);\n      setMovies([]); // Resetowanie listy filmÃ³w\n      if (searchInput) {\n        fetchMoviesData();\n      }\n    },\n    [searchInput, fetchMoviesData, navigate]\n  );\n\n  const handleInputChange = e => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <div>\n      <nav className={styles.nav}>\n        <Link to=\"/\" className={styles.nav__namehome}>\n          Home\n        </Link>\n        <Link to=\"/movies\" className={styles.nav__name}>\n          Movies\n        </Link>\n      </nav>\n      <form className={styles.search} onSubmit={handleSearch}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"enter film name\"\n          value={searchInput}\n          onChange={handleInputChange}\n        />\n        <button className={styles.button} type=\"submit\">\n          search\n        </button>\n      </form>\n\n      <ul>\n        {movies.map(movie => (\n          <li\n            className={styles.li}\n            key={movie.id}\n            onClick={() => handleMovieClick(movie.id)}\n          >\n            {movie.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '9c2047c90d98ec66c1e34a0e397d29c4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching cast:', error);\n    return [];\n  }\n};\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const fetchMoviesBySearchTerm = async searchTerm => {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n      searchTerm\n    )}`;\n    const response = await axios.get(url);\n    const data = response.data;\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = response.data;\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n"],"names":["location","useLocation","searchTerm","URLSearchParams","search","get","useState","movies","setMovies","searchInput","setSearchInput","navigate","useNavigate","fetchMoviesData","useCallback","fetchMoviesBySearchTerm","console","log","useEffect","handleSearch","e","preventDefault","encodeURIComponent","className","styles","to","onSubmit","type","placeholder","value","onChange","target","map","movie","onClick","movieId","id","title","API_KEY","BASE_URL","fetchCast","axios","response","data","cast","fetchMovies","results","fetchMovieDetails","url","fetchMovieReviews"],"sourceRoot":""}